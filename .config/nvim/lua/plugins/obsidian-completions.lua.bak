return {
  {
    -- nvim-cmp source for LSP completions
    "hrsh7th/cmp-nvim-lsp",

    config = function()
      require 'cmp'.setup {
        sources = {
          { name = 'nvim_lsp' }
        }
      }

      -- Moved to lsp-config
      -- local capabilities = require('cmp_nvim_lsp').default_capabilities()
    end
  },

  {
    -- Snippet engine (source of snippets and snippet expansion tool)
    "L3MON4D3/LuaSnip",
    dependencies = {
      -- Luasnip completion source for nvim-cmp
      "saadparwaiz1/cmp_luasnip",
      -- Collection of VScode snippets loaded by luanip
      "rafamadriz/friendly-snippets"
    },
  },

  -- {
  --   -- Collection of VScode snippets loaded by luanip
  --   "rafamadriz/friendly-snippets",
  --   -- follow latest release.
  --   version = "v2.*", -- Replace <CurrentMajor> by the latest released major (first number of latest release)
  --   -- install jsregexp (optional!).
  --   build = "make install_jsregexp"
  -- },

  {
    -- Autocompletion engine (the window)
    "hrsh7th/nvim-cmp",
    ft = "markdown",

    config = function()
      local cmp = require('cmp')
      require("luasnip.loaders.from_vscode").lazy_load()

      cmp.setup({
        enabled = function()
          return vim.bo.filetype == "markdown"
        end,

        snippet = {
          -- Run this function when validating a snippet
          expand = function(args)
            require('luasnip').lsp_expand(args.body)
            -- vim.fn["vsnip#anonymous"](args.body) -- For `vsnip` users.
            -- require('snippy').expand_snippet(args.body) -- For `snippy` users.
            -- vim.fn["UltiSnips#Anon"](args.body) -- For `ultisnips` users.
            -- vim.snippet.expand(args.body) -- For native neovim snippets (Neovim v0.10+)
          end,
        },
        window = {
          completion = cmp.config.window.bordered(),
          documentation = cmp.config.window.bordered(),
        },
        mapping = cmp.mapping.preset.insert({
          ['<C-b>'] = cmp.mapping.scroll_docs(-4),
          ['<C-f>'] = cmp.mapping.scroll_docs(4),
          ['<C-Space>'] = cmp.mapping.complete(),
          ['<C-e>'] = cmp.mapping.abort(),
          ['<CR>'] = cmp.mapping.confirm({ select = true }), -- Set `select` to `false` to only confirm explicitly selected items.
        }),
        sources = cmp.config.sources({
          -- { name = 'nvim_lsp' },
          -- { name = 'vsnip' }, -- For vsnip users.
          { name = 'luasnip' },
          -- { name = 'ultisnips' }, -- For ultisnips users.
          -- { name = 'snippy' }, -- For snippy users.
        }, {
          { name = 'buffer' },
        })
      })
    end
  }
}
